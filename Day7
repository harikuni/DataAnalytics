

######## Problem1 ----->  UnitedHealth SQL Interview Question ###################################
link -----> https://datalemur.com/questions/uncategorized-calls-percentage

Q.  UnitedHealth Group has a program called Advocate4Me, which allows members to call an advocate and receive support for their health care needs – whether that's behavioural, clinical, well-being, health care financing, benefits, claims or pharmacy help.
Calls to the Advocate4Me call centre are categorised, but sometimes they can't fit neatly into a category. These uncategorised calls are labelled “n/a”, or are just empty (when a support agent enters nothing into the category field).
Write a query to find the percentage of calls that cannot be categorised. Round your answer to 1 decimal place.


select ROUND(100.0*count(case_id) FILTER(
where call_category = 'n/a' or 
      call_category is NULL)/
      count(case_id),1) as percentage_calls
from callers;

      
      
######## Problem2 ----->  User's Third Transaction [Uber SQL Interview Question] ###################################
link -----> https://datalemur.com/questions/sql-third-transaction     


Q. Assume you are given the table below on Uber transactions made by users. Write a query to obtain the third transaction of every user. Output the user id, spend and transaction date.

with trans as(
select user_id,
spend,
transaction_date,
ROW_NUMBER() OVER(
PARTITION BY user_id ORDER BY transaction_date) as row_num
from transactions
)

select user_id,
spend,
transaction_date 
from trans
where row_num = 3;



######## Problem3 ----->  Sending vs. Opening Snaps [Snapchat SQL Interview Question] ###################################
link -----> https://datalemur.com/questions/time-spent-snaps

Q. Assume you're given tables with information on Snapchat users, including their ages and time spent sending and opening snaps.

Write a query to obtain a breakdown of the time spent sending vs. opening snaps as a percentage of total time spent on these activities grouped by age group. Round the percentage to 2 decimal places in the output.


with grouped as (
SELECT age.age_bucket,
sum(case when activity_type = 'open' then time_spent else 0 end) as o_time,
sum(case when activity_type = 'send' then time_spent else 0 end) as s_time,
sum(a.time_spent) as total_timespent
from activities a
join age_breakdown age on a.user_id = age.user_id
where a.activity_type = 'send' or a.activity_type = 'open'
group by age.age_bucket
)

select age_bucket,
round(100.0*s_time/(s_time+o_time),2) as send_perc,
round(100.0*o_time/(s_time+o_time),2) as open_perc
from grouped;




























