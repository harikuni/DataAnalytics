######## Problem1 ----->  Article Views I ###################################
link -----> https://leetcode.com/problems/article-views-i/?envType=study-plan-v2&id=top-sql-50


Q. Write an SQL query to find all the authors that viewed at least one of their own articles.
Return the result table sorted by id in ascending order.

select distinct author_id as id from views
where author_id = viewer_id
order by 1

######## Problem2 ----->  Invalid Tweets ###################################
link -----> https://leetcode.com/problems/invalid-tweets/?envType=study-plan-v2&id=top-sql-50

Q. Write an SQL query to find the IDs of the invalid tweets. The tweet is invalid if the number of characters used in the content 
of the tweet is strictly greater than 15.
Return the result table in any order.

select tweet_id from tweets
where length(content) >15



######## Problem3 -----> Average Time of Process per Machine ###################################
link ----->  https://leetcode.com/problems/average-time-of-process-per-machine/?envType=study-plan-v2&id=top-sql-50

Q. There is a factory website that has several machines each running the same number of processes. 

Write an SQL query to find the average time each machine takes to complete a process.
The time to complete a process is the 'end' timestamp minus the 'start' timestamp. 

The average time is calculated by the total time to complete every process on the machine divided by the number
of processes that were run.
The resulting table should have the machine_id along with the average time as processing_time, which should be 
rounded to 3 decimal places.

select a1.machine_id,
round(avg(a2.timestamp - a1.timestamp),3) as processing_time
from activity a1 
join activity a2
on a1.process_id = a2.process_id
and a1.machine_id = a2.machine_id
and a1.timestamp < a2.timestamp

group by 1
















































